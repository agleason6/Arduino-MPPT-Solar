////////////////////////////////////////////////////////////////////////
// calibration.h
// Calibration Header File
// by: Aistheta Gleason
////////////////////////////////////////////////////////////////////////
// Safety Note: Read the README!!! Keep Battery in well ventilated area
////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// Copyright and License
////////////////////////////////////////////////////////////////////////
// Copyright 2022, Aistheta (Adam) Gleason
////////////////////////////////////////////////////////////////////////
// This program is free software: you can redistribute it and/or modify 
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or 
// (at your option) any later version.
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
// You should have received a copy of the GNU General Public License
// (LICENSE) along with this program. If not, see 
// https://www.gnu.org/licenses/
////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////
// Config Header
#include "config.h"
#ifdef CAL
#include <string.h>
#include <stdlib.h>
#include <stdio.h>

////////////////////////////////////////////////////////////////////////
// Type Definitions
////////////////////////////////////////////////////////////////////////
typedef enum _cal_states {INIT_CAL, MEAS, USER_BAT, USER_SOL, CALC, DONE_CAL} CAL_STATES;

////////////////////////////////////////////////////////////////////////
// Global Variables
////////////////////////////////////////////////////////////////////////
extern volatile double user_bat, user_sol;
extern volatile CAL_STATES cur_cal_state;
extern char inbyte;
extern char inbytes[100];
extern char inbyte_i;
extern char tempstr[100];
extern bool calibrating;
extern double avg_bat;
extern double avg_sol;
extern int n_mppt;

////////////////////////////////////////////////////////////////////////
// Function Prototypes
////////////////////////////////////////////////////////////////////////
extern void setup_calibration();
extern void calibration_state_machine();

////////////////////////////////////////////////////////////////////////
// Macros
////////////////////////////////////////////////////////////////////////
#define ABS(X) ((X>0)?(X):(-X))

#endif
