////////////////////////////////////////////////////////////////////////
// config.h
// Configuration File
// by: Aistheta Gleason
////////////////////////////////////////////////////////////////////////
// Safety Note: Read the README!!! Keep Battery in well ventilated area
////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// Copyright and License
////////////////////////////////////////////////////////////////////////
// Copyright 2022, Aistheta (Adam) Gleason
////////////////////////////////////////////////////////////////////////
// This program is free software: you can redistribute it and/or modify 
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or 
// (at your option) any later version.
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
// You should have received a copy of the GNU General Public License
// (LICENSE) along with this program. If not, see 
// https://www.gnu.org/licenses/
////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////
#include "Arduino.h"

////////////////////////////////////////////////////////////////////////
// Calibration Settings
////////////////////////////////////////////////////////////////////////
// Uncomment "#define CAL 1" line below after completing calibration
// and updating ADC Coefficients below. Uncommenting the line will put
// the firmware into the "live" state.
////////////////////////////////////////////////////////////////////////
//#define CAL 1
////////////////////////////////////////////////////////////////////////
#ifdef CAL
// Number of MPPTs to run during self test report (100 ~= 33s)
#define N_MPPT 100

#endif

////////////////////////////////////////////////////////////////////////
// ADC Coefficients
////////////////////////////////////////////////////////////////////////
// After running calibration sequence and saving off the log, modify
// the VBAT_COEF and VSOL_COEF below to match the log.
////////////////////////////////////////////////////////////////////////
// ADC COEF (V/code) 10 bit ADC 3.3V Reference
#define ADC_COEF (3.3/(2^(11)-1))
// Inductor Voltage ADC Gain Coef
#define VL_COEF (1/(0.0990991))
// Inductor Voltage ADC Offset
#define VL_OFF (-2.5)
////////////////////////////////////////////////////////////////////////
// Battery Voltage ADC Gain Coef
////////////////////////////////////////////////////////////////////////
// Modify ---------(V)
//#define VBAT_COEF ()
// Default (comment out below)
#define VBAT_COEF (ADC_COEF/(0.15625))
////////////////////////////////////////////////////////////////////////
// Solar Voltage ADC Gain Coef
////////////////////////////////////////////////////////////////////////
// Modify ---------(V)
//#define VSOL_COEF ()
#define VSOL_COEF (ADC_COEF/(0.091639))
////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// GPIO Map
////////////////////////////////////////////////////////////////////////
// SW1 PWM Pin
#define SW1_PWM 6
// Battery Voltage Measure ADC Pin
#define VBAT_ADC A0
// Inductor Voltage Measure ADC Pin
#define VL_ADC A1
// Solar Voltage Measure ADC Pin
#define VSOL_ADC A2

////////////////////////////////////////////////////////////////////////
// Charger Settings
////////////////////////////////////////////////////////////////////////
// Charge voltage (target)
#define VCHARGE 14.0
// Number of Integrals to Average Before MPPT
#define NUM_INT 10
// PWM Frequency (30Hz)
#define PWM_FREQ 30
// Minimum Duty Cycle
#define D_MIN 5
// Maximum Duty Cycle
#define D_MAX 98
// Sleep Time (5m)
#define SLEEP_TIME (5*60)
// Base Timer Frequency (100xPWM Frequency)
#define BASE_PER (1/(100*PWM_FREQ))
